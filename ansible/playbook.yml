- hosts: all
  become: true
  become_method: sudo
  tasks:
  - name: "Update Repository cache"
    apt:
      update_cache: true
      cache_valid_time: 3600
      force_apt_get: true

- hosts: all
  name: Install Monitoring components
  become: true
  roles:
    - role: monitoring

- hosts: all
  name: Create technical user
  become: true
  tasks:
    - group:
        name: lessagasmp3
        state: present
        gid: 900
    - user:
        name: lessagasmp3
        uid: 900
        group: lessagasmp3
    - name: Création du répertoire ~/.bashrc.d
      file:
        path: "/home/lessagasmp3/.bashrc.d"
        state: directory
        owner: lessagasmp3
    - name: Sourcing des fichiers dans ~/.bashrc.d
      blockinfile:
        dest: "/home/lessagasmp3/.bashrc"
        block: |
          while read filename
          do
            source "$filename"
          done < <(find -L ~/.bashrc.d -type f)
        marker: '# {mark} ANSIBLE MANAGED BLOCK - ~.bashrc.d'
        insertbefore: BOF
        create: true

- hosts: all
  name: Mount db disk
  become: true
  tasks:
    - name: Format disk in ext4 format
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sdb
    - name: Create db directory
      file:
        path: "/opt/les-sagas-mp3/db"
        state: directory
        owner: "lessagasmp3"
        group: "lessagasmp3"
    - name: Mount disk on directory
      mount:
        path: "/opt/les-sagas-mp3/db"
        src: "/dev/sdb"
        fstype: ext4
        opts: discard,defaults
        state: mounted

- hosts: all
  name: Mount bucket on data folder
  become: true
  tasks:
    - name: Add Google Cloud apt repository key.
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /etc/apt/trusted.gpg.d/gcloud.asc
        mode: '0644'
        force: true
    - name: Add Google Cloud SDK package repository source
      apt_repository:
        repo: "deb https://packages.cloud.google.com/apt gcsfuse-jammy main"
        state: present
        filename: /etc/apt/sources.list.d/gcsfuse.list
        update_cache: true
    - name: Install gcsfuse
      package:
        name: gcsfuse
        state: present
    - name: Create data directory
      file:
        path: "/opt/les-sagas-mp3/data"
        state: directory
        owner: "lessagasmp3"
        group: "lessagasmp3"
    - name: Mount bucket on VM
      shell: "gcsfuse --app-name les-sagas-mp3 --uid 900 --gid 900 -o allow_other {{ storage.bucket_name }} /opt/les-sagas-mp3/data"

- hosts: all
  name: Install PostgreSQL
  roles:
    - role: geerlingguy.postgresql
      become: true
      vars:
        postgresql_version: "14"
        postgresql_databases:
          - name: "{{ db.name }}"
        postgresql_users:
          - name: "{{ db.username }}"
            password: "{{ db.password }}"
        postgresql_data_dir: /opt/les-sagas-mp3/db/14/main
    - role: backup
      become: true
      vars:
        linux_user: lessagasmp3

- hosts: all
  name: Install Java
  roles:
    - role: openjdk
      become: true
      vars:
        owner: lessagasmp3

- hosts: all
  name: Install Les Sagas MP3 components
  vars:
    linux_user: lessagasmp3
  roles:
    - role: core
      become: true
      vars:
        version: "{{ api.version }}"
        archive_url: "{{ api.archive_url }}"
    - role: app
      become: true
      vars:
        version: "{{ app.version }}"
        archive_url: "{{ app.archive_url }}"

- hosts: all
  name: Install Nginx
  become: true
  roles:
    - role: nginxinc.nginx
      vars:
        nginx_version: "=1.21.6-1~jammy"
        nginx_service_modify: true
        nginx_service_timeout: 95
        nginx_logrotate_conf_enable: true
        nginx_logrotate_conf:
          paths:
            - /var/log/nginx/*.log
          options:
            - daily
            - missingok
            - rotate 14
            - compress
            - delaycompress
            - notifempty
            - sharedscripts
  tasks:
    - name: Create nginx conf for api component
      template:
        src: api.nginx.conf.j2
        dest: "/etc/nginx/conf.d/api.conf"
        mode: '0644'
    - name: Create nginx conf for app component
      template:
        src: app.nginx.conf.j2
        dest: "/etc/nginx/conf.d/app.conf"
        mode: '0644'
    - name: Reload nginx
      systemd:
        state: restarted
        name: nginx

- hosts: all
  name: Configure SSL
  become: true
  tasks:
    - name: Checking python
      package:
        name: python3-pip
        state: present
    - name: Checking cron
      package:
        name: cron
        state: present
    - name: Install certbot
      pip:
        name:
          - certbot
          - certbot-nginx
        executable: pip3
    - name: Register certbot
      shell: |
        certbot -n register --agree-tos --email lessagasmp3@gmail.com
        touch /etc/letsencrypt/.registered
      args:
        creates: /etc/letsencrypt/.registered
    - name: Setup cronjob for renewal
      cron:
        name: certbot-renewal
        job: "/bin/bash -lc '/usr/local/bin/certbot -q renew'"
        minute: "0"
        hour: "14"
    - name: Get api certificate
      command: "/usr/local/bin/certbot -n --nginx -d {{ api.subdomain }}.{{ domain }}"
      ignore_errors: true
    - name: Get app certificate
      command: "/usr/local/bin/certbot -n --nginx -d {{ app.subdomain }}.{{ domain }}"
      ignore_errors: true
    - name: Reload nginx
      systemd:
        state: restarted
        name: nginx
