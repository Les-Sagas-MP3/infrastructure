steps:

- id: 'init'
  name: 'hashicorp/terraform:1.3.2'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
    terraform init -backend-config="bucket=$_TF_STATES_BACKEND" -backend-config="prefix=$_ENVIRONMENT_NAME"
  dir: 'terraform'

- id: 'plan'
  name: 'hashicorp/terraform:1.3.2'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
    export TF_VAR_ssh_private_key="foo"
    export TF_VAR_ssh_public_key="bar"
    terraform plan -var-file=$_TF_WORKSPACE/environments/default_versions.tfvars -var-file=$_TF_WORKSPACE/environments/review-api.tfvars -var=api_version=$_API_VERSION -out $_TF_WORKSPACE/.plan/destroy.tfplan
    terraform show -no-color -json $_TF_WORKSPACE/.plan/destroy.tfplan > $_TF_WORKSPACE/.plan/destroy.json
  env:
  - 'TF_VAR_ssh_user=$_SSH_USER'
  - 'TF_VAR_environment_name=$_ENVIRONMENT_NAME'
  - 'TF_VAR_api_archive_url=https://example.org'
  - 'TF_VAR_api_subdomain=api-$_ENVIRONMENT_NAME'
  - 'TF_VAR_app_subdomain=app-$_ENVIRONMENT_NAME'
  - 'TF_VAR_gcp_subnetwork_cidr=0.0.0.0/24'
  dir: 'terraform'

- id: 'apply'
  name: 'hashicorp/terraform:1.3.2'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
    terraform apply -destroy -auto-approve $_TF_WORKSPACE/.plan/destroy.tfplan
  dir: 'terraform'

artifacts:
  objects:
    location: 'gs://les-sagas-mp3-build/$_ENVIRONMENT_NAME'
    paths: ['$_TF_WORKSPACE/.plan/destroy.json']

substitutions:
  _SSH_USER: provisioning
  _SSH_KEY_PATH: /workspace/ssh_key
  _TF_STATES_BACKEND: les-sagas-mp3-infrastructure
  _TF_WORKSPACE: /workspace/terraform

availableSecrets:
  secretManager:
  - versionName: projects/798614005646/secrets/github-token/versions/1
    env: 'GITHUB_TOKEN'

options:
  logging: CLOUD_LOGGING_ONLY
  substitution_option: 'ALLOW_LOOSE'
